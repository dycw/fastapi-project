#### aerich ###################################################################
[tool.aerich]
tortoise_orm = "app.db.TORTOISE_ORM"
location = "./migrations"
src_folder = "./."

#### app ######################################################################
[app.environment]
environment = "development"

[app.development]
database_url = "postgres://postgres:postgres@db:5432/web_dev"
database_test_url = "postgres://postgres:postgres@db:5432/web_test"
database_url_sqla = "postgresql+psycopg2://postgres:postgres@db:5432/web_dev"
database_test_url_sqla = "postgresql+psycopg2://postgres:postgres@db:5432/web_dev"

[app.staging]
database_url = "postgres://postgres:postgres@db:5432/web_dev"
database_test_url = "postgres://postgres:postgres@db:5432/web_test"
database_url_sqla = "postgresql+psycopg2://postgres:postgres@db:5432/web_dev"
database_test_url_sqla = "postgresql+psycopg2://postgres:postgres@db:5432/web_dev"

[app.production]
database_url = "sqlite://sqlite.db"
database_test_url = "sqlite://sqlite.db"
database_url_sqla = "sqlite://sqlite.db"
database_test_url_sqla = "sqlite://sqlite.db"

#### black ####################################################################
[tool.black]
skip-magic-trailing-comma = true
target-version = ["py311"]

#### coverage #################################################################
[tool.coverage.run]
branch = true
data_file = ".coverage/data"
parallel = true
source = ["app"]

[tool.coverage.report]
exclude_lines = ["# pragma: no cover", "@overload"]
fail_under = 100.0
skip_covered = true
skip_empty = true

[tool.coverage.html]
directory = ".coverage/html"

#### pytest ###################################################################
[tool.pytest.ini_options]
addopts = [
  "-rsxX",
  "--strict-markers",
  "--tb=native"
]
filterwarnings = [
  "error",
  "ignore::DeprecationWarning",
  "ignore:Implicitly cleaning up <TemporaryDirectory '.*'>:ResourceWarning",
]
minversion = "7.0"
xfail_strict = true

#### ruff #####################################################################
[tool.ruff]
exclude = ["migrations/**"]
ignore = [
  "ANN101", # flake8-annotations, missing-type-self
  "ANN102", # flake8-annotations, missing-type-cls
  "ANN401", # flake8-annotations, dynamically-typed-expression
  "B008",  # flake8-bugbear, function-call-argument-default
  "COM812",  # flake8-commas, trailing-comma-missing
  "D", # pydocstyle
  "PD", # pandas-vet
  "PLR0913", # refactor, too-many-arguments
  "PT012", # flake8-pytest-style, raises-with-multiple-statements
  "PT013", # flake8-pytest-style, incorrect-pytest-import
  "TCH001", # flake8-type-checking, typing-only-first-party-import
  "TCH002", # flake8-type-checking, typing-only-third-party-import
  "TCH003", # flake8-type-checking, typing-only-standard-library-import
  "TRY200", # tryceratops, reraise-no-cause
  "TRY301", # tryceratops, raise-within-try

]
select = ["ALL"]
src = ["app", "db", "tests"]
target-version = "py311"

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
"tests/**/*.py" = [
  "FBT001", # flake8-boolean-trap, boolean-positional-arg-in-function-definition
  "FBT003", # flake8-boolean-trap, boolean-positional-value-in-function-call
  "PLR2004", # refactor, magic-value-comparison
  "S101", # flake8-bandit, assert-used

]
