name: push to any

on: push

env:
  IMAGE: ghcr.io/$(echo $GITHUB_REPOSITORY | tr '[A-Z]' '[a-z]')/summarizer

jobs:
  build:
    name: Build Docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Log in to GitHub Packages
        run: echo "$GITHUB_TOKEN" | docker login -u "$GITHUB_ACTOR" --password-stdin ghcr.io
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      - name: Pull images
        run: |
          docker pull "${{ env.IMAGE }}-builder:latest" || true
          docker pull "${{ env.IMAGE }}-final:latest" || true
      - name: Build images
        run: |
          docker build \
            --target builder \
            --cache-from "${{ env.IMAGE }}-builder:latest" \
            --tag "${{ env.IMAGE }}-builder:latest" \
            --file ./src/Dockerfile.prod \
            ./src
          docker build \
            --cache-from "${{ env.IMAGE }}-final:latest" \
            --tag "${{ env.IMAGE }}-final:latest" \
            --file ./src/Dockerfile.prod \
            ./src
      - name: Push images
        run: |
          docker push "${{ env.IMAGE }}-builder:latest"
          docker push "${{ env.IMAGE }}-final:latest"

  test:
    name: Test Docker image
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Log in to GitHub Packages
        run: echo ${GITHUB_TOKEN} | docker login -u ${GITHUB_ACTOR} --password-stdin ghcr.io
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Pull images
        run: |
          docker pull ${{ env.IMAGE }}-builder:latest || true
          docker pull ${{ env.IMAGE }}-final:latest || true
      - name: Build images
        run: |
          docker build \
            --target builder \
            --cache-from ${{ env.IMAGE }}-builder:latest \
            --tag ${{ env.IMAGE }}-builder:latest \
            --file ./src/Dockerfile.prod \
            "./src"
          docker build \
            --cache-from ${{ env.IMAGE }}-final:latest \
            --tag ${{ env.IMAGE }}-final:latest \
            --file ./src/Dockerfile.prod \
            "./src"
      - name: Run container
        run: |
          docker run \
            -d \
            --name app \
            -e PORT=8765 \
            -e ENVIRONMENT=dev \
            -e DATABASE_URL=sqlite://sqlite.db \
            -e DATABASE_TEST_URL=sqlite://sqlite.db \
            -p 5003:8765 \
            ${{ env.IMAGE }}-final:latest
      - name: Install requirements
        run: docker exec app pip install pytest black ruff
      - name: Pytest
        run: docker exec app python -m pytest .
      - name: Black
        run: docker exec app python -m black . --check
      - name: Ruff
        run: docker exec app python -m ruff .
